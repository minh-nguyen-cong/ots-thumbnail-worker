substitutions:
  _SERVICE_NAME: thumbnail-worker
  _REGION: asia-southeast1
  _IMAGE_NAME: asia-southeast1-docker.pkg.dev/cdc-online-thumbnail-service/cdc-online-thumbnail-service-repo/thumbnail-worker
  _CLOUDSQL_INSTANCE: cdc-online-thumbnail-service:asia-southeast1:gcp-mysql-thumbnail-db
  _DB_NAME: thumbnail_db
  _DB_USERNAME: cdc-online-thumbnail-service-db-username
  _DB_PASSWORD: cdc-online-thumbnail-service-db-password
  _DB_MAX_POOL_SIZE: "5"
  _SPRING_PROFILE: prod
  _GCS_RAW_BUCKET: cdc-online-thumbnail-service-bucket-raw-images
  _GCS_THUMBNAILS_BUCKET: cdc-online-thumbnail-service-bucket-thumbnails

steps:
  # Step 1: Use Maven to build the JAR (skipping tests)
  - name: 'gcr.io/cloud-builders/mvn'
    entrypoint: 'mvn'
    args: ['clean', 'package', '-DskipTests']

  # Step 2: Build Docker image using final JAR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_IMAGE_NAME}', '.']

  # Step 3: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_NAME}']

  # Step 4: Deploy to Cloud Run with increased memory
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_IMAGE_NAME}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--no-allow-unauthenticated' # This is an internal service
      - '--memory=1Gi' # Increase memory to handle large images
      - '--set-cloudsql-instances=${_CLOUDSQL_INSTANCE}'
      - '--set-env-vars=SPRING_CLOUD_GCP_SQL_DATABASE_NAME=${_DB_NAME}'
      - '--set-env-vars=SPRING_CLOUD_GCP_SQL_INSTANCE_CONNECTION_NAME=${_CLOUDSQL_INSTANCE}'
      - '--set-env-vars=SPRING_PROFILES_ACTIVE=${_SPRING_PROFILE}'
      - '--set-env-vars=spring.datasource.hikari.maximum-pool-size=${_DB_MAX_POOL_SIZE}'
      - '--set-env-vars=gcs.bucket.raw-images=${_GCS_RAW_BUCKET}'
      - '--set-env-vars=gcs.bucket.thumbnails=${_GCS_THUMBNAILS_BUCKET}'
      - '--set-secrets=DB_USERNAME=${_DB_USERNAME}:latest'
      - '--set-secrets=DB_PASSWORD=${_DB_PASSWORD}:latest'

images:
  - '${_IMAGE_NAME}'

options:
  logging: CLOUD_LOGGING_ONLY
